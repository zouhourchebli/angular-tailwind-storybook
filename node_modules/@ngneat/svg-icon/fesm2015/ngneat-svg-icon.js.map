{"version":3,"file":"ngneat-svg-icon.js","sources":["../../../../projects/ngneat/svg-icon/src/lib/types.ts","../../../../projects/ngneat/svg-icon/src/lib/registry.ts","../../../../projects/ngneat/svg-icon/src/lib/svg-icon.component.ts","../../../../projects/ngneat/svg-icon/src/lib/svg-icons.module.ts","../../../../projects/ngneat/svg-icon/src/ngneat-svg-icon.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface SvgIconType {\n  name: string;\n  data: string;\n}\n\nexport interface SVG_CONFIG {\n  icons?: SvgIconType | SvgIconType[];\n  color?: string;\n  defaultSize?: keyof SVG_CONFIG['sizes'];\n  missingIconFallback?: SvgIconType;\n  sizes: {\n    xs?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    xxl?: string;\n  };\n}\n\nexport const SVG_ICONS_CONFIG = new InjectionToken<SVG_CONFIG>('SVG_ICONS_CONFIG');\nexport const SVG_ICONS = new InjectionToken<SVG_CONFIG['icons']>('SVG_ICONS');\nexport const SVG_MISSING_ICON_FALLBACK = new InjectionToken<SVG_CONFIG['missingIconFallback']>('SVG_MISSING_ICON_FALLBACK');\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Injector } from '@angular/core';\n\nimport { SVG_CONFIG, SVG_ICONS_CONFIG, SvgIconType } from './types';\n\nclass SvgIcon {\n  init = false;\n\n  constructor(public content: string) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SvgIconRegistry {\n  private readonly svgMap = new Map<string, SvgIcon>();\n  private readonly document: Document;\n\n  constructor(injector: Injector, @Inject(SVG_ICONS_CONFIG) config: SVG_CONFIG) {\n    this.document = injector.get(DOCUMENT);\n\n    if (config.icons) {\n      this.register(config.icons);\n    }\n\n    if (config.missingIconFallback) {\n      this.register(config.missingIconFallback);\n    }\n  }\n\n  getAll() {\n    return this.svgMap;\n  }\n\n  get(key: string | undefined): string | undefined {\n    const icon = key && this.svgMap.get(key);\n\n    if (!icon) {\n      return undefined;\n    }\n\n    if (!icon.init) {\n      const svg = this.toElement(icon.content);\n      svg.setAttribute('fit', '');\n      svg.setAttribute('height', '100%');\n      svg.setAttribute('width', '100%');\n      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n      svg.setAttribute('focusable', 'false');\n\n      icon.content = svg.outerHTML;\n      icon.init = true;\n    }\n\n    return icon.content;\n  }\n\n  register(icons: SvgIconType | SvgIconType[]) {\n    for (const { name, data } of Array.isArray(icons) ? icons : [icons]) {\n      if (!this.svgMap.has(name)) {\n        this.svgMap.set(name, new SvgIcon(data));\n      }\n    }\n  }\n\n  getSvgElement(name: string): SVGSVGElement | undefined {\n    const content = this.get(name);\n\n    if (!content) {\n      return undefined;\n    }\n\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGSVGElement;\n  }\n\n  private toElement(content: string): SVGElement {\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGElement;\n  }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Inject, Input } from '@angular/core';\n\nimport { SvgIconRegistry } from './registry';\nimport { SVG_CONFIG, SVG_ICONS_CONFIG } from './types';\n\n@Component({\n  selector: 'svg-icon',\n  template: '',\n  host: {\n    role: 'img',\n    'aria-hidden': 'true',\n  },\n  styles: [\n    `\n      :host {\n        display: inline-block;\n        fill: currentColor;\n        width: 1em;\n        height: 1em;\n        font-size: 1rem;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SvgIconComponent {\n  @Input()\n  set key(name: string) {\n    const icon = this.registry.get(name) ?? this.registry.get(this.config.missingIconFallback?.name);\n\n    if (icon) {\n      this.element.setAttribute('aria-label', `${name}-icon`);\n      this.element.classList.remove(`svg-icon-${this.lastKey}`);\n      this.lastKey = name;\n      this.element.classList.add(`svg-icon-${name}`);\n      this.element.innerHTML = icon;\n    }\n  }\n\n  @Input()\n  set size(value: keyof SVG_CONFIG['sizes']) {\n    this.element.style.fontSize = this.mergedConfig.sizes[value];\n  }\n\n  @Input() set width(value: number | string) {\n    this.element.style.width = coerceCssPixelValue(value);\n  }\n\n  @Input() set height(value: number | string) {\n    this.element.style.height = coerceCssPixelValue(value);\n  }\n\n  @Input()\n  set fontSize(value: number | string) {\n    this.element.style.fontSize = coerceCssPixelValue(value);\n  }\n\n  @Input()\n  set color(color: string) {\n    this.element.style.color = color;\n  }\n\n  private mergedConfig: SVG_CONFIG;\n  private lastKey!: string;\n\n  constructor(\n    private host: ElementRef,\n    private registry: SvgIconRegistry,\n    @Inject(SVG_ICONS_CONFIG) private config: SVG_CONFIG\n  ) {\n    this.mergedConfig = this.createConfig();\n    this.element.style.fontSize = this.mergedConfig.sizes[this.mergedConfig.defaultSize || 'md'];\n  }\n\n  get element() {\n    return this.host.nativeElement;\n  }\n\n  private createConfig() {\n    const defaults: SVG_CONFIG = {\n      sizes: {\n        xs: '0.5rem',\n        sm: '0.75rem',\n        md: '1rem',\n        lg: '1.5rem',\n        xl: '2rem',\n        xxl: '2.5rem',\n      },\n    };\n\n    return {\n      ...defaults,\n      ...this.config,\n    };\n  }\n}\n\nfunction coerceCssPixelValue(value: any): string {\n  if (value == null) {\n    return '';\n  }\n\n  return typeof value === 'string' ? value : `${value}px`;\n}\n","import { Inject, ModuleWithProviders, NgModule, Optional } from '@angular/core';\n\nimport { SvgIconRegistry } from './registry';\nimport { SvgIconComponent } from './svg-icon.component';\nimport { SVG_CONFIG, SVG_ICONS, SVG_ICONS_CONFIG, SVG_MISSING_ICON_FALLBACK, SvgIconType } from './types';\n\n@NgModule({\n  declarations: [SvgIconComponent],\n  exports: [SvgIconComponent],\n})\nexport class SvgIconsModule {\n  static forRoot(config: Partial<SVG_CONFIG> = {}): ModuleWithProviders<SvgIconsModule> {\n    return {\n      ngModule: SvgIconsModule,\n      providers: [\n        {\n          provide: SVG_ICONS_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n\n  static forChild(icons: SvgIconType | SvgIconType[]): ModuleWithProviders<SvgIconsModule> {\n    return {\n      ngModule: SvgIconsModule,\n      providers: [{ provide: SVG_ICONS, useValue: icons }],\n    };\n  }\n\n  constructor(\n    @Optional() @Inject(SVG_ICONS) icons: SvgIconType | SvgIconType[],\n    @Optional() @Inject(SVG_MISSING_ICON_FALLBACK) missingIconFallback: SvgIconType,\n    private service: SvgIconRegistry\n  ) {\n    if (icons) {\n      this.service.register(icons);\n    }\n\n    if (missingIconFallback) {\n      this.service.register(missingIconFallback);\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {SVG_CONFIG as ɵb,SVG_ICONS as ɵd,SVG_ICONS_CONFIG as ɵc,SVG_MISSING_ICON_FALLBACK as ɵe,SvgIconType as ɵa} from './lib/types';"],"names":[],"mappings":"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"}