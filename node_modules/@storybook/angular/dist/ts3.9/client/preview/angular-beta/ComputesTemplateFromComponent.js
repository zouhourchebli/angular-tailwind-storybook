"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.computesTemplateSourceFromComponent = exports.computesTemplateFromComponent = void 0;
var NgComponentAnalyzer_1 = require("./utils/NgComponentAnalyzer");
var separateInputsOutputsAttributes = function (ngComponentInputsOutputs, props) {
    if (props === void 0) { props = {}; }
    var inputs = ngComponentInputsOutputs.inputs
        .filter(function (i) { return i.templateName in props; })
        .map(function (i) { return i.templateName; });
    var outputs = ngComponentInputsOutputs.outputs
        .filter(function (o) { return o.templateName in props; })
        .map(function (o) { return o.templateName; });
    return {
        inputs: inputs,
        outputs: outputs,
        otherProps: Object.keys(props).filter(function (k) { return !__spreadArrays(inputs, outputs).includes(k); }),
    };
};
/**
 * Converts a component into a template with inputs/outputs present in initial props
 * @param component
 * @param initialProps
 * @param innerTemplate
 */
exports.computesTemplateFromComponent = function (component, initialProps, innerTemplate) {
    if (innerTemplate === void 0) { innerTemplate = ''; }
    var ngComponentMetadata = NgComponentAnalyzer_1.getComponentDecoratorMetadata(component);
    var ngComponentInputsOutputs = NgComponentAnalyzer_1.getComponentInputsOutputs(component);
    if (!ngComponentMetadata.selector) {
        // Allow to add renderer component when NgComponent selector is undefined
        return "<ng-container *ngComponentOutlet=\"storyComponent\"></ng-container>";
    }
    var _a = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps), initialInputs = _a.inputs, initialOutputs = _a.outputs;
    var templateInputs = initialInputs.length > 0 ? " " + initialInputs.map(function (i) { return "[" + i + "]=\"" + i + "\""; }).join(' ') : '';
    var templateOutputs = initialOutputs.length > 0
        ? " " + initialOutputs.map(function (i) { return "(" + i + ")=\"" + i + "($event)\""; }).join(' ')
        : '';
    return buildTemplate(ngComponentMetadata.selector, innerTemplate, templateInputs, templateOutputs);
};
var createAngularInputProperty = function (_a) {
    var propertyName = _a.propertyName, value = _a.value, argType = _a.argType;
    var _b = (argType === null || argType === void 0 ? void 0 : argType.type) || {}, _c = _b.name, type = _c === void 0 ? null : _c, _d = _b.summary, summary = _d === void 0 ? null : _d;
    var templateValue = type === 'enum' && !!summary ? summary + "." + value : value;
    var actualType = type === 'enum' && summary ? 'enum' : typeof value;
    var requiresBrackets = ['object', 'any', 'boolean', 'enum', 'number'].includes(actualType);
    if (typeof value === 'object') {
        templateValue = propertyName;
    }
    return "" + (requiresBrackets ? '[' : '') + propertyName + (requiresBrackets ? ']' : '') + "=\"" + templateValue + "\"";
};
/**
 * Converts a component into a template with inputs/outputs present in initial props
 * @param component
 * @param initialProps
 * @param innerTemplate
 */
exports.computesTemplateSourceFromComponent = function (component, initialProps, argTypes) {
    var ngComponentMetadata = NgComponentAnalyzer_1.getComponentDecoratorMetadata(component);
    if (!ngComponentMetadata) {
        return null;
    }
    if (!ngComponentMetadata.selector) {
        // Allow to add renderer component when NgComponent selector is undefined
        return "<ng-container *ngComponentOutlet=\"" + component.name + "\"></ng-container>";
    }
    var ngComponentInputsOutputs = NgComponentAnalyzer_1.getComponentInputsOutputs(component);
    var _a = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps), initialInputs = _a.inputs, initialOutputs = _a.outputs;
    var templateInputs = initialInputs.length > 0
        ? " " + initialInputs
            .map(function (propertyName) {
            return createAngularInputProperty({
                propertyName: propertyName,
                value: initialProps[propertyName],
                argType: argTypes === null || argTypes === void 0 ? void 0 : argTypes[propertyName],
            });
        })
            .join(' ')
        : '';
    var templateOutputs = initialOutputs.length > 0
        ? " " + initialOutputs.map(function (i) { return "(" + i + ")=\"" + i + "($event)\""; }).join(' ')
        : '';
    return buildTemplate(ngComponentMetadata.selector, '', templateInputs, templateOutputs);
};
var buildTemplate = function (selector, innerTemplate, inputs, outputs) {
    var templateReplacers = [
        [/(^\..+)/, 'div$1'],
        [/(^\[.+?])/, 'div$1'],
        [/([\w[\]]+)(\s*,[\w\s-[\],]+)+/, "$1"],
        [/#([\w-]+)/, " id=\"$1\""],
        [/((\.[\w-]+)+)/, function (_, c) { return " class=\"" + c.split(templateObject_1 || (templateObject_1 = __makeTemplateObject(["."], ["."]))).join(templateObject_2 || (templateObject_2 = __makeTemplateObject([" "], [" "]))).trim() + "\""; }],
        [/(\[.+?])/g, function (_, a) { return " " + a.slice(1, -1); }],
        [/([\S]+)(.*)/, "<$1$2" + inputs + outputs + ">" + innerTemplate + "</$1>"],
    ];
    return templateReplacers.reduce(function (prevSelector, _a) {
        var searchValue = _a[0], replacer = _a[1];
        return prevSelector.replace(searchValue, replacer);
    }, selector);
};
var templateObject_1, templateObject_2;
