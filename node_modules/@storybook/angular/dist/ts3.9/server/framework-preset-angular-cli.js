"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.webpackFinal = void 0;
var node_logger_1 = require("@storybook/node-logger");
var tsconfig_paths_webpack_plugin_1 = __importDefault(require("tsconfig-paths-webpack-plugin"));
var architect_1 = require("@angular-devkit/architect");
var angular_read_workspace_1 = require("./angular-read-workspace");
var angular_devkit_build_webpack_1 = require("./angular-devkit-build-webpack");
var module_is_available_1 = require("./utils/module-is-available");
var filter_out_styling_rules_1 = require("./utils/filter-out-styling-rules");
function webpackFinal(baseConfig, options) {
    return __awaiter(this, void 0, void 0, function () {
        var dirToSearch, workspaceConfig, error_1, project, target, browserTarget, fondProject, angularCliWebpackConfig, error_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    dirToSearch = process.cwd();
                    if (!module_is_available_1.moduleIsAvailable('@angular-devkit/build-angular')) {
                        node_logger_1.logger.info('=> Using base config because "@angular-devkit/build-angular" is not installed');
                        return [2 /*return*/, baseConfig];
                    }
                    node_logger_1.logger.info('=> Loading angular-cli config');
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, angular_read_workspace_1.readAngularWorkspaceConfig(dirToSearch)];
                case 2:
                    workspaceConfig = _a.sent();
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    node_logger_1.logger.error("=> Could not find angular workspace config (angular.json) on this path \"" + dirToSearch + "\"");
                    node_logger_1.logger.info("=> Fail to load angular-cli config. Using base config");
                    return [2 /*return*/, baseConfig];
                case 4:
                    try {
                        browserTarget = options.angularBrowserTarget
                            ? architect_1.targetFromTargetString(options.angularBrowserTarget)
                            : {
                                configuration: undefined,
                                project: angular_read_workspace_1.getDefaultProjectName(workspaceConfig),
                                target: 'build',
                            };
                        fondProject = angular_read_workspace_1.findAngularProjectTarget(workspaceConfig, browserTarget.project, browserTarget.target);
                        project = fondProject.project;
                        target = fondProject.target;
                        node_logger_1.logger.info("=> Using angular project \"" + browserTarget.project + ":" + browserTarget.target + "\" for configuring Storybook");
                    }
                    catch (error) {
                        node_logger_1.logger.error("=> Could not find angular project: " + error.message);
                        node_logger_1.logger.info("=> Fail to load angular-cli config. Using base config");
                        return [2 /*return*/, baseConfig];
                    }
                    _a.label = 5;
                case 5:
                    _a.trys.push([5, 7, , 8]);
                    return [4 /*yield*/, angular_devkit_build_webpack_1.extractAngularCliWebpackConfig(dirToSearch, project, target)];
                case 6:
                    angularCliWebpackConfig = _a.sent();
                    node_logger_1.logger.info("=> Using angular-cli webpack config");
                    return [3 /*break*/, 8];
                case 7:
                    error_2 = _a.sent();
                    node_logger_1.logger.error("=> Could not get angular cli webpack config");
                    throw error_2;
                case 8: return [2 /*return*/, mergeAngularCliWebpackConfig(angularCliWebpackConfig, baseConfig)];
            }
        });
    });
}
exports.webpackFinal = webpackFinal;
function mergeAngularCliWebpackConfig(_a, baseConfig) {
    var cliCommonWebpackConfig = _a.cliCommonWebpackConfig, cliStyleWebpackConfig = _a.cliStyleWebpackConfig, tsConfigPath = _a.tsConfigPath;
    // Don't use storybooks styling rules because we have to use rules created by @angular-devkit/build-angular
    // because @angular-devkit/build-angular created rules have include/exclude for global style files.
    var rulesExcludingStyles = filter_out_styling_rules_1.filterOutStylingRules(baseConfig);
    // styleWebpackConfig.entry adds global style files to the webpack context
    var entry = __spreadArrays(baseConfig.entry, Object.values(cliStyleWebpackConfig.entry).reduce(function (acc, item) { return acc.concat(item); }, []));
    var module = __assign(__assign({}, baseConfig.module), { rules: __spreadArrays(cliStyleWebpackConfig.module.rules, rulesExcludingStyles) });
    // We use cliCommonConfig plugins to serve static assets files.
    var plugins = __spreadArrays(cliStyleWebpackConfig.plugins, cliCommonWebpackConfig.plugins, baseConfig.plugins);
    var resolve = __assign(__assign({}, baseConfig.resolve), { modules: Array.from(new Set(__spreadArrays(baseConfig.resolve.modules, cliCommonWebpackConfig.resolve.modules))), plugins: [
            new tsconfig_paths_webpack_plugin_1.default({
                configFile: tsConfigPath,
                mainFields: ['browser', 'module', 'main'],
            }),
        ] });
    return __assign(__assign({}, baseConfig), { entry: entry,
        module: module,
        plugins: plugins,
        resolve: resolve, resolveLoader: cliCommonWebpackConfig.resolveLoader });
}
