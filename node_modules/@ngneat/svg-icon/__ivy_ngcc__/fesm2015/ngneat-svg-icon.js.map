{"version":3,"file":"ngneat-svg-icon.js","sources":["../../../../projects/ngneat/svg-icon/src/lib/types.ts","../../../../projects/ngneat/svg-icon/src/lib/registry.ts","../../../../projects/ngneat/svg-icon/src/lib/svg-icon.component.ts","../../../../projects/ngneat/svg-icon/src/lib/svg-icons.module.ts","../../../../projects/ngneat/svg-icon/src/ngneat-svg-icon.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface SvgIconType {\n  name: string;\n  data: string;\n}\n\nexport interface SVG_CONFIG {\n  icons?: SvgIconType | SvgIconType[];\n  color?: string;\n  defaultSize?: keyof SVG_CONFIG['sizes'];\n  missingIconFallback?: SvgIconType;\n  sizes: {\n    xs?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    xxl?: string;\n  };\n}\n\nexport const SVG_ICONS_CONFIG = new InjectionToken<SVG_CONFIG>('SVG_ICONS_CONFIG');\nexport const SVG_ICONS = new InjectionToken<SVG_CONFIG['icons']>('SVG_ICONS');\nexport const SVG_MISSING_ICON_FALLBACK = new InjectionToken<SVG_CONFIG['missingIconFallback']>('SVG_MISSING_ICON_FALLBACK');\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Injector } from '@angular/core';\n\nimport { SVG_CONFIG, SVG_ICONS_CONFIG, SvgIconType } from './types';\n\nclass SvgIcon {\n  init = false;\n\n  constructor(public content: string) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SvgIconRegistry {\n  private readonly svgMap = new Map<string, SvgIcon>();\n  private readonly document: Document;\n\n  constructor(injector: Injector, @Inject(SVG_ICONS_CONFIG) config: SVG_CONFIG) {\n    this.document = injector.get(DOCUMENT);\n\n    if (config.icons) {\n      this.register(config.icons);\n    }\n\n    if (config.missingIconFallback) {\n      this.register(config.missingIconFallback);\n    }\n  }\n\n  getAll() {\n    return this.svgMap;\n  }\n\n  get(key: string | undefined): string | undefined {\n    const icon = key && this.svgMap.get(key);\n\n    if (!icon) {\n      return undefined;\n    }\n\n    if (!icon.init) {\n      const svg = this.toElement(icon.content);\n      svg.setAttribute('fit', '');\n      svg.setAttribute('height', '100%');\n      svg.setAttribute('width', '100%');\n      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n      svg.setAttribute('focusable', 'false');\n\n      icon.content = svg.outerHTML;\n      icon.init = true;\n    }\n\n    return icon.content;\n  }\n\n  register(icons: SvgIconType | SvgIconType[]) {\n    for (const { name, data } of Array.isArray(icons) ? icons : [icons]) {\n      if (!this.svgMap.has(name)) {\n        this.svgMap.set(name, new SvgIcon(data));\n      }\n    }\n  }\n\n  getSvgElement(name: string): SVGSVGElement | undefined {\n    const content = this.get(name);\n\n    if (!content) {\n      return undefined;\n    }\n\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGSVGElement;\n  }\n\n  private toElement(content: string): SVGElement {\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGElement;\n  }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Inject, Input } from '@angular/core';\n\nimport { SvgIconRegistry } from './registry';\nimport { SVG_CONFIG, SVG_ICONS_CONFIG } from './types';\n\n@Component({\n  selector: 'svg-icon',\n  template: '',\n  host: {\n    role: 'img',\n    'aria-hidden': 'true',\n  },\n  styles: [\n    `\n      :host {\n        display: inline-block;\n        fill: currentColor;\n        width: 1em;\n        height: 1em;\n        font-size: 1rem;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SvgIconComponent {\n  @Input()\n  set key(name: string) {\n    const icon = this.registry.get(name) ?? this.registry.get(this.config.missingIconFallback?.name);\n\n    if (icon) {\n      this.element.setAttribute('aria-label', `${name}-icon`);\n      this.element.classList.remove(`svg-icon-${this.lastKey}`);\n      this.lastKey = name;\n      this.element.classList.add(`svg-icon-${name}`);\n      this.element.innerHTML = icon;\n    }\n  }\n\n  @Input()\n  set size(value: keyof SVG_CONFIG['sizes']) {\n    this.element.style.fontSize = this.mergedConfig.sizes[value];\n  }\n\n  @Input() set width(value: number | string) {\n    this.element.style.width = coerceCssPixelValue(value);\n  }\n\n  @Input() set height(value: number | string) {\n    this.element.style.height = coerceCssPixelValue(value);\n  }\n\n  @Input()\n  set fontSize(value: number | string) {\n    this.element.style.fontSize = coerceCssPixelValue(value);\n  }\n\n  @Input()\n  set color(color: string) {\n    this.element.style.color = color;\n  }\n\n  private mergedConfig: SVG_CONFIG;\n  private lastKey!: string;\n\n  constructor(\n    private host: ElementRef,\n    private registry: SvgIconRegistry,\n    @Inject(SVG_ICONS_CONFIG) private config: SVG_CONFIG\n  ) {\n    this.mergedConfig = this.createConfig();\n    this.element.style.fontSize = this.mergedConfig.sizes[this.mergedConfig.defaultSize || 'md'];\n  }\n\n  get element() {\n    return this.host.nativeElement;\n  }\n\n  private createConfig() {\n    const defaults: SVG_CONFIG = {\n      sizes: {\n        xs: '0.5rem',\n        sm: '0.75rem',\n        md: '1rem',\n        lg: '1.5rem',\n        xl: '2rem',\n        xxl: '2.5rem',\n      },\n    };\n\n    return {\n      ...defaults,\n      ...this.config,\n    };\n  }\n}\n\nfunction coerceCssPixelValue(value: any): string {\n  if (value == null) {\n    return '';\n  }\n\n  return typeof value === 'string' ? value : `${value}px`;\n}\n","import { Inject, ModuleWithProviders, NgModule, Optional } from '@angular/core';\n\nimport { SvgIconRegistry } from './registry';\nimport { SvgIconComponent } from './svg-icon.component';\nimport { SVG_CONFIG, SVG_ICONS, SVG_ICONS_CONFIG, SVG_MISSING_ICON_FALLBACK, SvgIconType } from './types';\n\n@NgModule({\n  declarations: [SvgIconComponent],\n  exports: [SvgIconComponent],\n})\nexport class SvgIconsModule {\n  static forRoot(config: Partial<SVG_CONFIG> = {}): ModuleWithProviders<SvgIconsModule> {\n    return {\n      ngModule: SvgIconsModule,\n      providers: [\n        {\n          provide: SVG_ICONS_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n\n  static forChild(icons: SvgIconType | SvgIconType[]): ModuleWithProviders<SvgIconsModule> {\n    return {\n      ngModule: SvgIconsModule,\n      providers: [{ provide: SVG_ICONS, useValue: icons }],\n    };\n  }\n\n  constructor(\n    @Optional() @Inject(SVG_ICONS) icons: SvgIconType | SvgIconType[],\n    @Optional() @Inject(SVG_MISSING_ICON_FALLBACK) missingIconFallback: SvgIconType,\n    private service: SvgIconRegistry\n  ) {\n    if (icons) {\n      this.service.register(icons);\n    }\n\n    if (missingIconFallback) {\n      this.service.register(missingIconFallback);\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {SVG_CONFIG as ɵb,SVG_ICONS as ɵd,SVG_ICONS_CONFIG as ɵc,SVG_MISSING_ICON_FALLBACK as ɵe,SvgIconType as ɵa} from './lib/types';"]}