"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbstractRenderer = void 0;
/* eslint-disable no-undef */
var core_1 = require("@angular/core");
var platform_browser_dynamic_1 = require("@angular/platform-browser-dynamic");
var rxjs_1 = require("rxjs");
var StorybookModule_1 = require("./StorybookModule");
// platform must be init only if render is called at least once
var platformRef;
function getPlatform(newPlatform) {
    if (!platformRef || newPlatform) {
        platformRef = platform_browser_dynamic_1.platformBrowserDynamic();
    }
    return platformRef;
}
var AbstractRenderer = /** @class */ (function () {
    function AbstractRenderer(storyId) {
        this.storyId = storyId;
        if (typeof NODE_ENV === 'string' && NODE_ENV !== 'development') {
            try {
                // platform should be set after enableProdMode()
                core_1.enableProdMode();
            }
            catch (e) {
                // eslint-disable-next-line no-console
                console.debug(e);
            }
        }
    }
    /**
     * Wait and destroy the platform
     */
    AbstractRenderer.resetPlatformBrowserDynamic = function () {
        var _this = this;
        return new Promise(function (resolve) {
            if (platformRef && !platformRef.destroyed) {
                platformRef.onDestroy(function () { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, AbstractRenderer.resetCompiledComponents()];
                            case 1:
                                _a.sent();
                                resolve();
                                return [2 /*return*/];
                        }
                    });
                }); });
                // Destroys the current Angular platform and all Angular applications on the page.
                // So call each angular ngOnDestroy and avoid memory leaks
                platformRef.destroy();
                return;
            }
            resolve();
        }).then(function () {
            getPlatform(true);
        });
    };
    /**
     * Bootstrap main angular module with main component or send only new `props` with storyProps$
     *
     * @param storyFnAngular {StoryFnAngularReturnType}
     * @param forced {boolean} If :
     * - true render will only use the StoryFn `props' in storyProps observable that will update sotry's component/template properties. Improves performance without reloading the whole module&component if props changes
     * - false fully recharges or initializes angular module & component
     * @param parameters {Parameters}
     */
    AbstractRenderer.prototype.render = function (_a) {
        var _b;
        var storyFnAngular = _a.storyFnAngular, forced = _a.forced, parameters = _a.parameters, targetDOMNode = _a.targetDOMNode;
        return __awaiter(this, void 0, void 0, function () {
            var targetSelector, newStoryProps$, moduleMetadata;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        targetSelector = "" + this.storyId;
                        newStoryProps$ = new rxjs_1.BehaviorSubject(storyFnAngular.props);
                        moduleMetadata = StorybookModule_1.getStorybookModuleMetadata({ storyFnAngular: storyFnAngular, parameters: parameters, targetSelector: targetSelector }, newStoryProps$);
                        if (!this.fullRendererRequired({
                            storyFnAngular: storyFnAngular,
                            moduleMetadata: moduleMetadata,
                            forced: forced,
                        })) {
                            this.storyProps$.next(storyFnAngular.props);
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, this.beforeFullRender()];
                    case 1:
                        _c.sent();
                        // Complete last BehaviorSubject and set a new one for the current module
                        if (this.storyProps$) {
                            this.storyProps$.complete();
                        }
                        this.storyProps$ = newStoryProps$;
                        this.initAngularRootElement(targetDOMNode, targetSelector);
                        return [4 /*yield*/, getPlatform().bootstrapModule(StorybookModule_1.createStorybookModule(moduleMetadata), (_b = parameters.bootstrapModuleOptions) !== null && _b !== void 0 ? _b : undefined)];
                    case 2:
                        _c.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AbstractRenderer.prototype.initAngularRootElement = function (targetDOMNode, targetSelector) {
        // Adds DOM element that angular will use as bootstrap component
        // eslint-disable-next-line no-param-reassign
        targetDOMNode.innerHTML = '';
        targetDOMNode.appendChild(document.createElement(targetSelector));
    };
    AbstractRenderer.prototype.fullRendererRequired = function (_a) {
        var _b;
        var storyFnAngular = _a.storyFnAngular, moduleMetadata = _a.moduleMetadata, forced = _a.forced;
        var previousStoryRenderInfo = this.previousStoryRenderInfo;
        var currentStoryRender = {
            storyFnAngular: storyFnAngular,
            moduleMetadataSnapshot: JSON.stringify(moduleMetadata),
        };
        this.previousStoryRenderInfo = currentStoryRender;
        if (
        // check `forceRender` of story RenderContext
        !forced ||
            // if it's the first rendering and storyProps$ is not init
            !this.storyProps$) {
            return true;
        }
        // force the rendering if the template has changed
        var hasChangedTemplate = !!(storyFnAngular === null || storyFnAngular === void 0 ? void 0 : storyFnAngular.template) &&
            ((_b = previousStoryRenderInfo === null || previousStoryRenderInfo === void 0 ? void 0 : previousStoryRenderInfo.storyFnAngular) === null || _b === void 0 ? void 0 : _b.template) !== storyFnAngular.template;
        if (hasChangedTemplate) {
            return true;
        }
        // force the rendering if the metadata structure has changed
        var hasChangedModuleMetadata = currentStoryRender.moduleMetadataSnapshot !== (previousStoryRenderInfo === null || previousStoryRenderInfo === void 0 ? void 0 : previousStoryRenderInfo.moduleMetadataSnapshot);
        return hasChangedModuleMetadata;
    };
    /**
     * Reset compiled components because we often want to compile the same component with
     * more than one NgModule.
     */
    AbstractRenderer.resetCompiledComponents = function () { return __awaiter(void 0, void 0, void 0, function () {
        var ɵresetCompiledComponents, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('@angular/core')); })];
                case 1:
                    ɵresetCompiledComponents = (_a.sent()).ɵresetCompiledComponents;
                    ɵresetCompiledComponents();
                    return [3 /*break*/, 3];
                case 2:
                    e_1 = _a.sent();
                    return [3 /*break*/, 3];
                case 3: return [2 /*return*/];
            }
        });
    }); };
    return AbstractRenderer;
}());
exports.AbstractRenderer = AbstractRenderer;
